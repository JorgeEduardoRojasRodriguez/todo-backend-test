version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: todo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todoapp
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/todoapp?schema=public
      JWT_SECRET: 5c6b007c64614c4c39e85052242210564f265f671b198b2945b8af113698a06c57197b4ae2a7b6e0227b8af509fe0cb21a0b4407e02a22cfc8169abcd0df617c
      JWT_EXPIRES_IN: 24h
      PORT: 3000
      NODE_ENV: production
      CORS_ORIGIN: http://localhost:4200
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - todo-network
    command: sh -c "npx prisma migrate deploy && npm run start:prod"

volumes:
  postgres_data:

networks:
  todo-network:
    driver: bridge
